Copyright (c) 2008, 2019, Oracle and/or its affiliates. All rights reserved.
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  
The Universal Permissive License (UPL), Version 1.0

Subject to the condition set forth below, permission is hereby granted to
any person obtaining a copy of this software, associated documentation
and/or data (collectively the "Software"), free of charge and under any
and all copyright rights in the Software, and any and all patent rights
owned or freely licensable by each licensor hereunder covering either (i)
the unmodified Software as contributed to or provided by such licensor,
or (ii) the Larger Works (as defined below), to deal in both

(a) the Software, and

(b) any piece of software and/or hardware listed in the lrgrwrks.txt file
if one is included with the Software (each a "Larger Work" to which the
Software is contributed by such licensors),

without restriction, including without limitation the rights to copy,
create derivative works of, display, perform, and distribute the Software
and make, use, sell, offer for sale, import, export, have made, and have
sold the Software and the Larger Work(s), and to sublicense the foregoing
rights on either these or other terms.

This license is subject to the following condition:

The above copyright notice and either this complete permission notice or
at a minimum a reference to the UPL must be included in all copies or
substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
USE OR OTHER DEALINGS IN THE SOFTWARE.

Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
or visit www.oracle.com if you need additional information or have any
questions.

________________________________________________________________________

'hsdis':  A HotSpot plugin for disassembling dynamically generated code.

The files in this directory (Makefile, hsdis.[ch], hsdis-demo.c)
are built independently of the HotSpot JVM.

To use the plugin with a JVM, you need a new version that can load it.
If the product mode of your JVM does not accept -XX:+PrintAssembly,
you do not have a version that is new enough.

* Building

To cross-compile LLVM on Windows-x86_64 for Windows-Arm64

```
PS> cd llvm-src
PS> mkdir build
PS> cd build
PS> & "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsamd64_arm64.bat"
PS> & 'C:\Program Files\CMake\bin\cmake.exe' .. -Thost=x64 -G "Visual Studio 15 2017" -A arm64 \
  -DCMAKE_INSTALL_PREFIX="C:\LLVM-9-arm64" -DCMAKE_PREFIX_PATH="C:\LLVM-9-arm64" \
  -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_LIBXML2=OFF -DLLVM_USE_CRT_RELEASE=MT -DLLVM_TARGETS_TO_BUILD=AArch64 \
  -DLLVM_TABLEGEN="C:\LLVM-9-x86_64\bin\llvm-tblgen.exe" -DCMAKE_SYSTEM_VERSION="10.0.16299.0" -DLLVM_TOOL_LLVM_SHLIB_BUILD=OFF
```

To cross-compile hsdis on Windows-x86_64 for Windows-Arm64

```
PS> & "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsamd64_arm64.bat"
PS> & "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\Hostx64\arm64\cl.exe" \
  -I"C:\LLVM-9-arm64\include" -I"C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt" \
  -I"C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\include" -D_CRT_SECURE_NO_DEPRECATE \
  -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE -D_CRT_NONSTDC_NO_WARNINGS -D_SCL_SECURE_NO_DEPRECATE \
  -D_SCL_SECURE_NO_WARNINGS -DUNICODE -D_UNICODE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS \
  -DLIBARCH_aarch64 C:\git\jdk~arm64\src\utils\hsdis-llvm\hsdis.c /LD /link -LIBPATH:"C:\LLVM-9-arm64\lib" \
  -LIBPATH:"C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\lib\arm64" \
  -LIBPATH:"C:\Program Files (x86)\Windows Kits\10\Lib\10.0.17763.0\ucrt\arm64" \
  -LIBPATH:"C:\Program Files (x86)\Windows Kits\10\Lib\10.0.17763.0\um\arm64" /NODEFAULTLIB:libcmt.lib \
  C:\LLVM-9-arm64\lib\LLVMAArch64Disassembler.lib C:\LLVM-9-arm64\lib\LLVMMCDisassembler.lib \
  C:\LLVM-9-arm64\lib\LLVMAArch64CodeGen.lib C:\LLVM-9-arm64\lib\LLVMGlobalISel.lib C:\LLVM-9-arm64\lib\LLVMSelectionDAG.lib \
  C:\LLVM-9-arm64\lib\LLVMAArch64AsmParser.lib C:\LLVM-9-arm64\lib\LLVMAArch64Desc.lib C:\LLVM-9-arm64\lib\LLVMAArch64Utils.lib \
  C:\LLVM-9-arm64\lib\LLVMAArch64Info.lib C:\LLVM-9-arm64\lib\LLVMAsmPrinter.lib C:\LLVM-9-arm64\lib\LLVMDebugInfoDWARF.lib \
  C:\LLVM-9-arm64\lib\LLVMCodeGen.lib C:\LLVM-9-arm64\lib\LLVMTarget.lib C:\LLVM-9-arm64\lib\LLVMScalarOpts.lib \
  C:\LLVM-9-arm64\lib\LLVMInstCombine.lib C:\LLVM-9-arm64\lib\LLVMAggressiveInstCombine.lib \
  C:\LLVM-9-arm64\lib\LLVMTransformUtils.lib C:\LLVM-9-arm64\lib\LLVMBitWriter.lib C:\LLVM-9-arm64\lib\LLVMAnalysis.lib \
  C:\LLVM-9-arm64\lib\LLVMProfileData.lib C:\LLVM-9-arm64\lib\LLVMObject.lib C:\LLVM-9-arm64\lib\LLVMMCParser.lib \
  C:\LLVM-9-arm64\lib\LLVMMC.lib C:\LLVM-9-arm64\lib\LLVMDebugInfoCodeView.lib C:\LLVM-9-arm64\lib\LLVMDebugInfoMSF.lib \
  C:\LLVM-9-arm64\lib\LLVMBitReader.lib C:\LLVM-9-arm64\lib\LLVMCore.lib C:\LLVM-9-arm64\lib\LLVMRemarks.lib \
  C:\LLVM-9-arm64\lib\LLVMBinaryFormat.lib C:\LLVM-9-arm64\lib\LLVMBitstreamReader.lib C:\LLVM-9-arm64\lib\LLVMSupport.lib \
  C:\LLVM-9-arm64\lib\LLVMDemangle.lib psapi.lib shell32.lib ole32.lib uuid.lib advapi32.lib msvcrt.lib
```

* Installing

Products are named like build/$OS-$LIBARCH/hsdis-$LIBARCH.so. You can
install them next to your libjvm.so inside your JRE/JDK or alternatively
put it anywhere on your LD_LIBRARY_PATH. The search path in the JVM is:

1. <home>/lib/<vm>/libhsdis-<arch>.so
2. <home>/lib/<vm>/hsdis-<arch>.so
3. <home>/lib/hsdis-<arch>.so
4. hsdis-<arch>.so  (using LD_LIBRARY_PATH)

Now test:

  export LD_LIBRARY_PATH .../hsdis/build/$OS-$LIBARCH:$LD_LIBRARY_PATH
  dargs='-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly'
  dargs=$dargs' -XX:PrintAssemblyOptions=hsdis-print-bytes'
  java $dargs -Xbatch CompileCommand=print,*String.hashCode HelloWorld

If the product mode of the JVM does not accept -XX:+PrintAssembly,
you do not have a version new enough to use the hsdis plugin.

* Wiki

More information can be found in the OpenJDK HotSpot Wiki [1].


Resources:

[1] https://wiki.openjdk.java.net/display/HotSpot/PrintAssembly
[2] http://sourceware.org/bugzilla/show_bug.cgi?id=15345
